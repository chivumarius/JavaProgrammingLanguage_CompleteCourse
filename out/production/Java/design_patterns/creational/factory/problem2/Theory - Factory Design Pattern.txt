

	Theory - Factory Design Pattern





  • Factory Method is a creational design pattern that provides an interface for creating objects in a superclass but allows subclasses to alter the type of objects that will be created.





○ Structure ○



  1- The Product declares the interface, which is common to all objects that can be produced by the creator and its subclasses.


  2- Concrete Products are different implementations of the product interface.


  3- The Creator class declares the factory method that returns new product objects. It’s important that the return type of this method matches the
product interface.


  4- Concrete Creators override the base factory method so it returns a different type of product.




  • Note that the factory method doesn’t have to create new instances all the time. 

    ► It can also return existing objects from a cache, an object pool, or another source.




  • Use the Factory Method when you don’t know beforehand the exact types and dependencies of the objects your code should work with.



  • The Factory Method separates product construction code from the code that actually uses the product.

  • Therefore it’s easier to extend the product construction code independently from the rest of the code.









